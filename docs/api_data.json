[  {    "type": "post",    "url": "/api/benches",    "title": "Create a bench",    "name": "CreateBench",    "group": "Bench",    "version": "1.0.0",    "description": "<p>Register a new bench.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the bench generated by the server</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>The unique identifier of the user which create de bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>The description of the bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "creationDate",            "description": "<p>The registration date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "modificationDate",            "description": "<p>The last modification date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "score",            "description": "<p>The score of the bench (0 by default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "material",            "description": "<p>The material of the bench (Wood,Metal,Stone,Marble,Plastic)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "ergonomy",            "description": "<p>The ergonomy mark of the bench</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "backrest",            "description": "<p>The backrest parameters</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "seats",            "description": "<p>The number of seats on the bench</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location",            "description": "<p>Location array</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location.type",            "description": "<p>Location type array</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "location.type.type",            "description": "<p>Geometrical type (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "location.coordinates",            "description": "<p>The longitude and latitude of the bench</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://sedes666.herokuapp.com/api/benches/58b2926f5e1def0123e97286\n\n{\n  \"id\": \"58b2926f5e1def0123e97286\",\n  \"userId\" : \"58b2926f5e1def0123e97281\",\n  \"description\": \"Nice bench with a beautiful view on the lake\",\n  \"creationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"modificationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"backrest\": \"0\",\n  \"material\": \"Wood\",\n  \"ergonomy\": \"2\",\n  \"seats\" : 3,\n  \"image\" : \"beautifulbench.jpg\",\n  \"location\" : {\n     \"type\" : \"Point\"\n     \"coordinates\" :  [52.373660, 4.896888]\n    }\n  \"__v\":0\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/benches HTTP/1.1\nContent-Type: application/json\n\n{\n  \"description\": \"Nice bench with a beautiful view on the lake\",\n  \"backrest\": \"0\",\n  \"material\": \"Wood\",\n  \"ergonomy\": \"2\",\n  \"seats\" : 3,\n  \"image\" : \"beautifulbench.jpg\",\n  \"location\" : {\n    \"coordinates\" : [52.373660, 4.896888]\n    }\n   }",        "type": "json"      }    ],    "filename": "routes/benches.js",    "groupTitle": "Bench",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "description",            "description": "<p>The description of the bench &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>"          },          {            "group": "Request body",            "type": "Boolean",            "size": "0..1",            "optional": false,            "field": "backrest",            "description": "<p>The backrest parameter (0 = No|1 = Yes)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "Wood, Metal, Stone, Marble, Plastic",            "optional": false,            "field": "material",            "description": "<h1>The material of the bench (Wood,Metal,Stone,Marble,Plastic)</h1>"          },          {            "group": "Request body",            "type": "Number",            "size": "0..5",            "optional": false,            "field": "ergonomy",            "description": "<p>The ergonomy mark of the bench</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "0..3000",            "optional": false,            "field": "seats",            "description": "<p>The number of seats on the bench</p>"          },          {            "group": "Request body",            "type": "String",            "size": "0..50",            "optional": false,            "field": "image",            "description": "<p>The image of the bench</p>"          },          {            "group": "Request body",            "type": "Array",            "optional": false,            "field": "location",            "description": "<p>Location array</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "[-180..180,-90..90]",            "optional": false,            "field": "location.coordinates",            "description": "<p>The longitude and latitude of the bench</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the bench's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"bench validation failed\",\n  \"errors\": {\n    \"description\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `description` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"description\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"description\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/api/benches/:id",    "title": "Delete a bench",    "name": "DeleteBench",    "group": "Bench",    "version": "1.0.0",    "description": "<p>Permanently deletes a bench.</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /api/benches/58b2926f5e1def0123e97286 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/benches.js",    "groupTitle": "Bench",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the bench to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No bench was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo bench found with ID 5db6f9a2070b2c0017c06b77",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/benches/:id",    "title": "Retrieve a bench",    "name": "RetrieveBench",    "group": "Bench",    "version": "1.0.0",    "description": "<p>Retrieve a bench</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/benches/58b2926f5e1def0123e97286",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n   {\n  \"id\": \"58b2926f5e1def0123e97286\",\n  \"userId\" : \"58b2926f5e1def0123e97281\",\n  \"description\": \"Nice bench with a beautiful view on the lake\",\n  \"creationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"modificationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"score\" : \"210\",\n  \"backrest\": \"0\",\n  \"material\": \"Wood\",\n  \"ergonomy\": \"2\",\n  \"seats\" : 3,\n  \"image\" : \"beautifulbench.jpg\",\n  \"location\" : {\n     \"type\" : \"Point\"\n     \"coordinates\" :  [52.373666, 4.896888]\n    }\n  \"__v\":0\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the bench (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>The unique identifier of the user which create de bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>The description of the bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "creationDate",            "description": "<p>The registration date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "modificationDate",            "description": "<p>The last modification date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "score",            "description": "<p>The score of the bench (0 by default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "material",            "description": "<p>The material of the bench (Wood,Metal,Stone,Marble,Plastic)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "ergonomy",            "description": "<p>The ergonomy mark of the bench</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "backrest",            "description": "<p>The backrest parameters</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "seats",            "description": "<p>The number of seats on the bench</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location",            "description": "<p>Location array</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location.type",            "description": "<p>Location type array</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "location.type.type",            "description": "<p>Geometrical type (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "location.coordinates",            "description": "<p>The longitude and latitude of the bench</p>"          }        ]      }    },    "filename": "routes/benches.js",    "groupTitle": "Bench",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the bench to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No bench was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo bench found with ID 5db6f9a2070b2c0017c06b77",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/benches/:id/votes",    "title": "Retrieve all bench's votes",    "name": "RetrieveBenchVotes",    "group": "Bench",    "version": "1.0.0",    "description": "<p>Retrieve a paginated list of bench's votes ordered by date (reverse-chronological order)</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/benches/58b2926f5e1def0123e97281/votes",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n   {\n   \"_id\" : \"5dc978cb7245260017491963\",\n   \"type\": true,\n   \"voteDate\": \"2019-11-9T15:20:56.468Z\",\n   \"userId\": \"58b2926f5e1def0123e97281\",\n   \"benchId\": \"5db6f9a2070b2c0017c06b77\",\n   \"__v\":0\n   },\n   {\n   \"id\" : \"5dc3f77bed705e0017873ed1\",\n   \"type\": false,\n   \"voteDate\": \"2019-11-9T15:20:26.468Z\",\n   \"userId\": \"58b2926f5e1def0123e97281\",\n   \"benchId\": \"4242922f5f6eha3123e97286\",\n   \"__v\":0\n   }",          "type": "json"        }      ]    },    "filename": "routes/benches.js",    "groupTitle": "Bench",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the bench to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No bench was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo bench found with ID 5db6f9a2070b2c0017c06b77",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/benches",    "title": "Retrieve all benches",    "name": "RetrieveBenches",    "group": "Bench",    "version": "1.0.0",    "description": "<p>Retrieve a paginated list of all benches ordered by score (descending order)</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/benches",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://sedes666.herokuapp.com/api/benches\n\n[\n{\n  \"id\": \"58b2926f5e1def0123e97286\",\n  \"userId\" : \"58b2926f5e1def0123e97281\",\n  \"description\": \"Nice bench with a beautiful view on the lake\",\n  \"creationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"modificationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"score\" : \"210\",\n  \"backrest\": \"0\",\n  \"material\": \"Wood\",\n  \"ergonomy\": \"2\",\n  \"seats\" : 3,\n  \"image\" : \"beautifulbench.jpg\",\n  \"location\" : {\n     \"type\" : \"Point\"\n     \"coordinates\" :  [52.373666, 4.896888]\n    }\n  \"__v\":0\n},\n{\n  \"id\": \"5db6f9a2070b2c0017c06b77\",\n  \"userId\" : \"5a2539b41c574006c46f1a07\",\n  \"description\": \"Relaxing forest bench\",\n  \"creationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"modificationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"score\" : \"198\",\n  \"backrest\": \"1\",\n  \"material\": \"Plastic\",\n  \"ergonomy\": \"4\",\n  \"seats\" : 2,\n  \"image\" : \"lovethisbench.jpg\",\n  \"location\" : {\n     \"type\" : \"Point\"\n     \"coordinates\" :  [52.393660, 4.902666]\n    }\n  \"__v\":0\n}\n]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the bench (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>The unique identifier of the user which create de bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>The description of the bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "creationDate",            "description": "<p>The registration date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "modificationDate",            "description": "<p>The last modification date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "score",            "description": "<p>The score of the bench (0 by default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "material",            "description": "<p>The material of the bench (Wood,Metal,Stone,Marble,Plastic)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "ergonomy",            "description": "<p>The ergonomy mark of the bench</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "backrest",            "description": "<p>The backrest parameters</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "seats",            "description": "<p>The number of seats on the bench</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location",            "description": "<p>Location array</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location.type",            "description": "<p>Location type array</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "location.type.type",            "description": "<p>Geometrical type (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "location.coordinates",            "description": "<p>The longitude and latitude of the bench</p>"          }        ]      }    },    "filename": "routes/benches.js",    "groupTitle": "Bench"  },  {    "type": "patch",    "url": "/api/benches/:id",    "title": "Update a bench",    "name": "UpdateBench",    "group": "Bench",    "version": "1.0.0",    "description": "<p>Replace specified bench's data.</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /api/benches/58b2926f5e1def0123e97286 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"image\": \"newImageOfTheBeautifulBench.jpg\"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97286\",\n  \"userId\" : \"58b2926f5e1def0123e97281\",\n  \"description\": \"Nice bench with a beautiful view on the lake\",\n  \"creationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"modificationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"backrest\": \"0\",\n  \"material\": \"Wood\",\n  \"ergonomy\": \"2\",\n  \"seats\" : 3,\n  \"image\" : \"newImageOfTheBeautifulBench.jpg\",\n  \"location\" : {\n     \"type\" : \"Point\"\n     \"coordinates\" :  [52.373660, 4.896888]\n    }\n  \"__v\":0\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the bench (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "userId",            "description": "<p>The unique identifier of the user which create de bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "description",            "description": "<p>The description of the bench</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "creationDate",            "description": "<p>The registration date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "modificationDate",            "description": "<p>The last modification date of the bench (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "score",            "description": "<p>The score of the bench (0 by default)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "material",            "description": "<p>The material of the bench (Wood,Metal,Stone,Marble,Plastic)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "ergonomy",            "description": "<p>The ergonomy mark of the bench</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "backrest",            "description": "<p>The backrest parameters</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "seats",            "description": "<p>The number of seats on the bench</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location",            "description": "<p>Location array</p>"          },          {            "group": "Response body",            "type": "Array",            "optional": false,            "field": "location.type",            "description": "<p>Location type array</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "location.type.type",            "description": "<p>Geometrical type (default)</p>"          },          {            "group": "Response body",            "type": "Number",            "optional": false,            "field": "location.coordinates",            "description": "<p>The longitude and latitude of the bench</p>"          }        ]      }    },    "filename": "routes/benches.js",    "groupTitle": "Bench",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "description",            "description": "<p>The description of the bench &lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>"          },          {            "group": "Request body",            "type": "Boolean",            "size": "0..1",            "optional": false,            "field": "backrest",            "description": "<p>The backrest parameter (0 = No|1 = Yes)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "Wood, Metal, Stone, Marble, Plastic",            "optional": false,            "field": "material",            "description": "<h1>The material of the bench (Wood,Metal,Stone,Marble,Plastic)</h1>"          },          {            "group": "Request body",            "type": "Number",            "size": "0..5",            "optional": false,            "field": "ergonomy",            "description": "<p>The ergonomy mark of the bench</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "0..3000",            "optional": false,            "field": "seats",            "description": "<p>The number of seats on the bench</p>"          },          {            "group": "Request body",            "type": "String",            "size": "0..50",            "optional": false,            "field": "image",            "description": "<p>The image of the bench</p>"          },          {            "group": "Request body",            "type": "Array",            "optional": false,            "field": "location",            "description": "<p>Location array</p>"          },          {            "group": "Request body",            "type": "Number",            "size": "[-180..180,-90..90]",            "optional": false,            "field": "location.coordinates",            "description": "<p>The longitude and latitude of the bench</p>"          }        ],        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the bench to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No bench was found corresponding to the ID in the URL path</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the bench's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo bench found with ID 5db6f9a2070b2c0017c06b77",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"bench validation failed\",\n  \"errors\": {\n    \"description\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `description` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"description\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"description\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/api/users",    "title": "Create a user",    "name": "CreateUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Register a new user.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the user generated by the server</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the user</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "registrationDate",            "description": "<p>The registration date of the user (default)</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://sedes666.herokuapp.com/api/users/58b2926f5e1def0123e97281\n\n{\n  \"id\": \"58b2926f5e1def0123e97281\",\n  \"username\": \"TreyParker\",\n  \"password\": \"$2a$07$hndQIDW9dAPAZMRdyp5Cg.IHk1B0p/bNFHXGBntbXsvIktFWkX1L.\",\n  \"registrationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"__v\":0\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/users HTTP/1.1\nContent-Type: application/json\n\n{\n  \"username\": \"TreyParker\",\n  \"password\": \"301\",\n}",        "type": "json"      }    ],    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "3..60",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the suser</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the user's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"user validation failed\",\n  \"errors\": {\n    \"username\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `username` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"username\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"username\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/api/users/:id",    "title": "Delete a user",    "name": "DeleteUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Permanently deletes a user.</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /api/people/58b2926f5e1def0123e97281 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the user to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No user was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97281",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/api/users/login",    "title": "Login a user",    "name": "Login",    "group": "User",    "version": "1.0.0",    "description": "<p>Login a user.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the user generated by the server</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the user</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "registrationDate",            "description": "<p>The registration date of the user (default)</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://sedes666.herokuapp.com/api/users/58b2926f5e1def0123e97281\n\n{\n  \"id\": \"58b2926f5e1def0123e97281\",\n  \"username\": \"TreyParker\",\n  \"password\": \"$2a$07$hndQIDW9dAPAZMRdyp5Cg.IHk1B0p/bNFHXGBntbXsvIktFWkX1L.\",\n  \"registrationDate\": \"2019-11-9T15:20:56.468Z\",\n  \"__v\":0\n}",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/users HTTP/1.1\nContent-Type: application/json\n\n{\n  \"username\": \"TreyParker\",\n  \"password\": \"301\",\n}",        "type": "json"      }    ],    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "3..60",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the suser</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the user's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"user validation failed\",\n  \"errors\": {\n    \"username\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `username` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"username\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"username\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/users/:id",    "title": "Retrieve a user",    "name": "RetrieveUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Retrieve a user</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/users/58b2926f5e1def0123e97281",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n   {\n   \"id\": \"58b2926f5e1def0123e97281\",\n   \"username\": \"TreyParker\",\n   \"password\": \"$2a$07$hndQIDW9dAPAZMRdyp5Cg.IHk1B0p/bNFHXGBntbXsvIktFWkX1L.\",\n   \"registrationDate\": \"2019-11-9T15:20:56.468Z\",\n   \"__v\":0\n   }",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the user (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the user</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "registrationDate",            "description": "<p>The registration date of the user (default)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the user to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No user was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97281",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/users/:id/votes",    "title": "Retrieve all user's votes",    "name": "RetrieveUserVotes",    "group": "User",    "version": "1.0.0",    "description": "<p>Retrieve a paginated list of user's votes ordered by date (reverse-chronological order)</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/users/58b2926f5e1def0123e97281/votes",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n   {\n   \"_id\" : \"5dc3f77bed705e0017873ed1\",\n   \"type\": true,\n   \"voteDate\": \"2019-11-9T15:20:56.468Z\",\n   \"userId\": \"58b2926f5e1def0123e97281\",\n   \"benchId\": \"5db6f9a2070b2c0017c06b77\",\n   \"__v\":0\n   },\n   {\n   \"_id\" : \"5dc978cb7245260017491963\",\n   \"type\": false,\n   \"voteDate\": \"2019-11-9T15:20:26.468Z\",\n   \"userId\": \"58b2926f5e1def0123e97281\",\n   \"benchId\": \"4242922f5f6eha3123e97286\",\n   \"__v\":0\n   }",          "type": "json"        }      ]    },    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the user to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No user was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97281",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/users",    "title": "Retrieve all users",    "name": "RetrieveUsers",    "group": "User",    "version": "1.0.0",    "description": "<p>Retrieve a paginated list of users ordered by username (in alphabetical order).</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/users",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://sedes666.herokuapp.com/api/users\n\n[\n   {\n  \"id\": \"58b2926f5e1def0123e97280\",\n  \"username\": \"MattStone\",\n  \"password\": \"EyOLWDkNG2S8U2S4BF24BebhZUgxYpUyoa9qj1SJEOfwhf2PKB9O\",\n  \"registrationDate\": \"2019-12-9T15:10:10.468Z\",\n  \"__v\":0\n   },\n   {\n   \"id\": \"58b2926f5e1def0123e97281\",\n   \"username\": \"TreyParker\",\n   \"password\": \"$2a$07$hndQIDW9dAPAZMRdyp5Cg.IHk1B0p/bNFHXGBntbXsvIktFWkX1L.\",\n   \"registrationDate\": \"2019-11-9T15:20:56.468Z\",\n   \"__v\":0\n   }\n]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the user (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the user</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "registrationDate",            "description": "<p>The registration date of the user (default)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "User"  },  {    "type": "patch",    "url": "/api/users/:id",    "title": "Update a user",    "name": "UpdateUser",    "group": "User",    "version": "1.0.0",    "description": "<p>Replace specified user's data.</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /api/users/58b2926f5e1def0123e97281 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"password\": \"newPassword\"\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"id\": \"58b2926f5e1def0123e97281\",\n  \"password\": \"$2a$07$YQI9k8fqscj5dawrlLquaON2/C66ZaNIXL4kAA922my/dAB7xNHru\"\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the user (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the user</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "registrationDate",            "description": "<p>The registration date of the user (default)</p>"          }        ]      }    },    "filename": "routes/users.js",    "groupTitle": "User",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "String",            "size": "3..50",            "optional": false,            "field": "username",            "description": "<p>The name of the user (unique)</p>"          },          {            "group": "Request body",            "type": "String",            "size": "3..60",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the suser</p>"          }        ],        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the user to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No user was found corresponding to the ID in the URL path</p>"          },          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the user's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo person found with ID 58b2926f5e1def0123e97281",          "type": "json"        },        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"user validation failed\",\n  \"errors\": {\n    \"username\": {\n      \"kind\": \"minlength\",\n      \"message\": \"Path `username` (`0`) is shorter than the minimum allowed length (3).\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"username\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` is shorter than the minimum allowed length (3).\",\n        \"minlength\": 3,\n        \"path\": \"username\",\n        \"type\": \"minlength\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/api/users",    "title": "Create a vote",    "name": "CreateVote",    "group": "Vote",    "version": "1.0.0",    "description": "<p>Register a new vote.</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>A unique identifier for the user generated by the server</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "type",            "description": "<p>Vote type, up or down</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "voteDate",            "description": "<p>The date of the vote (default)</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "userId",            "description": "<p>The user id</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "benchId",            "description": "<p>The bench id</p>"          }        ]      },      "examples": [        {          "title": "201 Created",          "content": "HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: https://sedes666.herokuapp.com/api/votes/5db6f9a2070b2c0017c06b77\n\n   {\n   \"_id\" : \"58b2926f5e1def0123e97281\"\n   \"type\": true,\n   \"voteDate\": \"2019-11-9T15:20:56.468Z\",\n   \"userId\": \"5a2539b41c574006c46f1a07\",\n   \"benchId\": \"5db6f9a2070b2c0017c06b77\",\n   \"__v\":0\n   }",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "POST /api/users HTTP/1.1\nContent-Type: application/json\n\n   {\n   \"voteDate\": \"2019-11-9T15:20:56.468Z\",\n   \"userId\": \"5a2539b41c574006c46f1a07\",\n   \"benchId\": \"5db6f9a2070b2c0017c06b77\"\n   }",        "type": "json"      }    ],    "filename": "routes/votes.js",    "groupTitle": "Vote",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Boolean",            "size": "[0 = false = down | 1 = true = up]",            "optional": false,            "field": "type",            "description": "<p>Vote type, up or down</p>"          },          {            "group": "Request body",            "type": "ObjectId",            "optional": false,            "field": "userId",            "description": "<p>The user id</p>"          },          {            "group": "Request body",            "type": "ObjectId",            "optional": false,            "field": "benchId",            "description": "<p>The bench id</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "422/UnprocessableEntity",            "description": "<p>Some of the vote's properties are invalid</p>"          }        ]      },      "examples": [        {          "title": "422 Unprocessable Entity",          "content": "HTTP/1.1 422 Unprocessable Entity\nContent-Type: application/json\n\n{\n  \"message\": \"vote validation failed\",\n  \"errors\": {\n    \"benchId\": {\n      \"kind\": \"notFound\",\n      \"message\": \"Path `benchId` not found\",\n      \"name\": \"ValidatorError\",\n      \"path\": \"benchId\",\n      \"properties\": {\n        \"message\": \"Path `{PATH}` (`{VALUE}`) not found\",\n        \"minlength\": 3,\n        \"path\": \"benchId\",\n        \"type\": \"notFound\",\n        \"value\": \"0\"\n      },\n      \"value\": \"0\"\n    }\n  }\n}",          "type": "json"        }      ]    }  },  {    "type": "delete",    "url": "/api/votes/:id",    "title": "Delete a vote",    "name": "DeleteVote",    "group": "Vote",    "version": "1.0.0",    "description": "<p>Permanently deletes a vote.</p>",    "examples": [      {        "title": "Example",        "content": "DELETE /api/votes/58b2926f5e1def0123e97281 HTTP/1.1",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "204 No Content",          "content": "HTTP/1.1 204 No Content",          "type": "json"        }      ]    },    "filename": "routes/votes.js",    "groupTitle": "Vote",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the vote to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No vote was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo vote found with ID 5db6f9a2070b2c0017c06b77",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/votes/:id",    "title": "Retrieve a vote",    "name": "RetrieveVote",    "group": "Vote",    "version": "1.0.0",    "description": "<p>Retrieve a vote</p>",    "success": {      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the vote</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "votename",            "description": "<p>The name of the vote (unique)</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>The secret pass of the vote</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "registrationDate",            "description": "<p>The registration date of the vote</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "type",            "description": "<p>Vote type, up or down</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "voteDate",            "description": "<p>The date of the vote (default)</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "userId",            "description": "<p>The user id</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "benchId",            "description": "<p>The bench id</p>"          }        ]      },      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n   {\n   \"_id\" : \"58b2926f5e1def0123e97281\"\n   \"type\": true,\n   \"voteDate\": \"2019-11-9T15:20:56.468Z\",\n   \"userId\": \"5a2539b41c574006c46f1a07\",\n   \"benchId\": \"5db6f9a2070b2c0017c06b77\",\n   \"__v\":0\n   }",          "type": "json"        }      ]    },    "examples": [      {        "title": "Example",        "content": "GET /api/votes/58b2926f5e1def0123e97281",        "type": "json"      }    ],    "filename": "routes/votes.js",    "groupTitle": "Vote",    "parameter": {      "fields": {        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the vote to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No vote was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo vote found with ID 5db6f9a2070b2c0017c06b77",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/api/votes",    "title": "Retrieve all votes",    "name": "RetrieveVotes",    "group": "Vote",    "version": "1.0.0",    "description": "<p>Retrieve a paginated list of all votes ordered by date (reverse-chronological order)</p>",    "examples": [      {        "title": "Example",        "content": "GET /api/votes",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\nLink: &lt;https://sedes666.herokuapp.com/api/votes\n\n[\n   {\n   \"id\" : \"5dc3f77bed705e0017873ed1\"\n   \"type\": true,\n   \"voteDate\": \"2019-11-9T15:20:56.468Z\",\n   \"userId\": \"5a2539b41c574006c46f1a07\",\n   \"benchId\": \"5db6f9a2070b2c0017c06b77\",\n   \"__v\":0\n   },\n   {\n   \"_id\" : \"5dc978cb7245260017491963\",\n   \"type\": false,\n   \"voteDate\": \"2019-11-9T15:20:26.468Z\",\n   \"userId\": \"58b2926f5e1def0123e97281\",\n   \"benchId\": \"4242922f5f6eha3123e97286\",\n   \"__v\":0\n   }\n]",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the vote (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "type",            "description": "<p>Vote type, up or down</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "voteDate",            "description": "<p>The date of the vote (default)</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "userId",            "description": "<p>The user id</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "benchId",            "description": "<p>The bench id</p>"          }        ]      }    },    "filename": "routes/votes.js",    "groupTitle": "Vote"  },  {    "type": "patch",    "url": "/api/votes/:id",    "title": "Update a vote",    "name": "UpdateVote",    "group": "Vote",    "version": "1.0.0",    "description": "<p>Inverse vote type.</p>",    "examples": [      {        "title": "Example",        "content": "PATCH /api/votes/58b2926f5e1def0123e97281 HTTP/1.1\nContent-Type: application/json\n\n{\n  \"type\": false,\n}",        "type": "json"      }    ],    "success": {      "examples": [        {          "title": "200 OK",          "content": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"_id\" : \"58b2926f5e1def0123e97281\"\n   \"type\": false,\n   \"voteDate\": \"2019-11-9T15:20:56.468Z\",\n   \"userId\": \"5a2539b41c574006c46f1a07\",\n   \"benchId\": \"5db6f9a2070b2c0017c06b77\",\n   \"__v\":0\n}",          "type": "json"        }      ],      "fields": {        "Response body": [          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the vote (generated by mongo)</p>"          },          {            "group": "Response body",            "type": "Boolean",            "optional": false,            "field": "type",            "description": "<p>Vote type, up or down</p>"          },          {            "group": "Response body",            "type": "String",            "optional": false,            "field": "voteDate",            "description": "<p>The date of the vote (default)</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "userId",            "description": "<p>The user id</p>"          },          {            "group": "Response body",            "type": "ObjectId",            "optional": false,            "field": "benchId",            "description": "<p>The bench id</p>"          }        ]      }    },    "filename": "routes/votes.js",    "groupTitle": "Vote",    "parameter": {      "fields": {        "Request body": [          {            "group": "Request body",            "type": "Boolean",            "size": "[0 = false = down | 1 = true = up]",            "optional": false,            "field": "type",            "description": "<p>Vote type, up or down</p>"          },          {            "group": "Request body",            "type": "ObjectId",            "optional": false,            "field": "userId",            "description": "<p>The user id</p>"          },          {            "group": "Request body",            "type": "ObjectId",            "optional": false,            "field": "benchId",            "description": "<p>The bench id</p>"          }        ],        "URL path parameters": [          {            "group": "URL path parameters",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The unique identifier of the vote to retrieve</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "type": "Object",            "optional": false,            "field": "404/NotFound",            "description": "<p>No vote was found corresponding to the ID in the URL path</p>"          }        ]      },      "examples": [        {          "title": "404 Not Found",          "content": "HTTP/1.1 404 Not Found\nContent-Type: text/plain\n\nNo vote found with ID 5db6f9a2070b2c0017c06b77",          "type": "json"        }      ]    }  }]
